digraph tree {
    "(0, 0, 0)";
    "(2, 185, 2)";
    "(16, 105, 10)";
    "(19, 103, 12)";
    "(29, 94, 19)";
    "(34, 62, 23)";
    "(45, 50, 30)";
    "(73, 78, 22)";
    "(86, 91, 21)";
    "(115, 157, 5)";
    "(118, 156, 6)";
    "(122, 148, 9)";
    "(132, 140, 17)";
    "(165, 181, 6)";
    "(169, 174, 10)";
    "(194, 205, 6)";
    "(215, 220, 4)";
    "(240, 266, 1)";
    "(244, 263, 4)";
    "(252, 257, 9)";
    "(282, 306, 4)";
    "(292, 297, 8)";
    "(313, 345, 1)";
    "(319, 336, 7)";
    "(323, 331, 8)";
    "(352, 389, 5)";
    "(363, 384, 10)";
    "(370, 375, 12)";
    "(428, 609, 4)";
    "(430, 606, 5)";
    "(434, 603, 8)";
    "(442, 493, 15)";
    "(445, 491, 17)";
    "(454, 480, 26)";
    "(465, 471, 33)";
    "(505, 597, 11)";
    "(511, 590, 17)";
    "(520, 582, 24)";
    "(522, 564, 26)";
    "(532, 554, 34)";
    "(538, 545, 37)";
    "(570, 581, 25)";
    "(574, 579, 27)";
    "(622, 653, 6)";
    "(627, 651, 8)";
    "(634, 644, 12)";
    "(672, 720, 1)";
    "(674, 719, 2)";
    "(688, 693, 14)";
    "(709, 714, 4)";
    "(0, 0, 0)" -> "(2, 185, 2)";
    "(0, 0, 0)" -> "(194, 205, 6)";
    "(0, 0, 0)" -> "(215, 220, 4)";
    "(0, 0, 0)" -> "(240, 266, 1)";
    "(0, 0, 0)" -> "(282, 306, 4)";
    "(0, 0, 0)" -> "(313, 345, 1)";
    "(0, 0, 0)" -> "(352, 389, 5)";
    "(0, 0, 0)" -> "(428, 609, 4)";
    "(0, 0, 0)" -> "(622, 653, 6)";
    "(0, 0, 0)" -> "(672, 720, 1)";
    "(2, 185, 2)" -> "(16, 105, 10)";
    "(2, 185, 2)" -> "(115, 157, 5)";
    "(2, 185, 2)" -> "(165, 181, 6)";
    "(16, 105, 10)" -> "(19, 103, 12)";
    "(19, 103, 12)" -> "(29, 94, 19)";
    "(29, 94, 19)" -> "(34, 62, 23)";
    "(29, 94, 19)" -> "(73, 78, 22)";
    "(29, 94, 19)" -> "(86, 91, 21)";
    "(34, 62, 23)" -> "(45, 50, 30)";
    "(115, 157, 5)" -> "(118, 156, 6)";
    "(118, 156, 6)" -> "(122, 148, 9)";
    "(122, 148, 9)" -> "(132, 140, 17)";
    "(165, 181, 6)" -> "(169, 174, 10)";
    "(240, 266, 1)" -> "(244, 263, 4)";
    "(244, 263, 4)" -> "(252, 257, 9)";
    "(282, 306, 4)" -> "(292, 297, 8)";
    "(313, 345, 1)" -> "(319, 336, 7)";
    "(319, 336, 7)" -> "(323, 331, 8)";
    "(352, 389, 5)" -> "(363, 384, 10)";
    "(363, 384, 10)" -> "(370, 375, 12)";
    "(428, 609, 4)" -> "(430, 606, 5)";
    "(430, 606, 5)" -> "(434, 603, 8)";
    "(434, 603, 8)" -> "(442, 493, 15)";
    "(434, 603, 8)" -> "(505, 597, 11)";
    "(442, 493, 15)" -> "(445, 491, 17)";
    "(445, 491, 17)" -> "(454, 480, 26)";
    "(454, 480, 26)" -> "(465, 471, 33)";
    "(505, 597, 11)" -> "(511, 590, 17)";
    "(511, 590, 17)" -> "(520, 582, 24)";
    "(520, 582, 24)" -> "(522, 564, 26)";
    "(520, 582, 24)" -> "(570, 581, 25)";
    "(522, 564, 26)" -> "(532, 554, 34)";
    "(532, 554, 34)" -> "(538, 545, 37)";
    "(570, 581, 25)" -> "(574, 579, 27)";
    "(622, 653, 6)" -> "(627, 651, 8)";
    "(627, 651, 8)" -> "(634, 644, 12)";
    "(672, 720, 1)" -> "(674, 719, 2)";
    "(674, 719, 2)" -> "(688, 693, 14)";
    "(674, 719, 2)" -> "(709, 714, 4)";
}
