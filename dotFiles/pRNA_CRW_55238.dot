digraph tree {
    "(0, 0, 0)";
    "(8, 16, 5)";
    "(31, 272, 10)";
    "(38, 215, 16)";
    "(40, 212, 18)";
    "(41, 178, 19)";
    "(47, 174, 22)";
    "(51, 171, 25)";
    "(55, 60, 27)";
    "(70, 152, 28)";
    "(77, 105, 30)";
    "(80, 101, 33)";
    "(88, 93, 37)";
    "(110, 140, 31)";
    "(113, 139, 32)";
    "(117, 131, 35)";
    "(122, 127, 38)";
    "(146, 150, 30)";
    "(159, 164, 29)";
    "(184, 210, 19)";
    "(188, 207, 22)";
    "(196, 201, 27)";
    "(229, 266, 15)";
    "(240, 261, 20)";
    "(247, 252, 22)";
    "(288, 483, 3)";
    "(299, 398, 7)";
    "(305, 391, 10)";
    "(322, 380, 16)";
    "(324, 362, 18)";
    "(334, 352, 26)";
    "(339, 346, 29)";
    "(369, 379, 17)";
    "(372, 377, 19)";
    "(411, 442, 9)";
    "(416, 440, 11)";
    "(423, 433, 15)";
    "(464, 475, 10)";
    "(489, 512, 3)";
    "(499, 504, 7)";
    "(524, 829, 2)";
    "(527, 825, 5)";
    "(535, 818, 12)";
    "(540, 813, 14)";
    "(547, 774, 19)";
    "(557, 706, 29)";
    "(559, 703, 31)";
    "(566, 575, 35)";
    "(593, 694, 38)";
    "(602, 688, 40)";
    "(607, 684, 44)";
    "(611, 682, 46)";
    "(614, 676, 49)";
    "(619, 670, 54)";
    "(627, 646, 60)";
    "(630, 636, 63)";
    "(659, 664, 57)";
    "(723, 727, 24)";
    "(737, 768, 20)";
    "(744, 761, 25)";
    "(748, 756, 29)";
    "(791, 799, 22)";
    "(836, 915, 2)";
    "(839, 911, 4)";
    "(841, 909, 5)";
    "(850, 899, 13)";
    "(855, 895, 15)";
    "(930, 935, 10)";
    "(0, 0, 0)" -> "(8, 16, 5)";
    "(0, 0, 0)" -> "(31, 272, 10)";
    "(0, 0, 0)" -> "(288, 483, 3)";
    "(0, 0, 0)" -> "(489, 512, 3)";
    "(0, 0, 0)" -> "(524, 829, 2)";
    "(0, 0, 0)" -> "(836, 915, 2)";
    "(0, 0, 0)" -> "(930, 935, 10)";
    "(31, 272, 10)" -> "(38, 215, 16)";
    "(31, 272, 10)" -> "(229, 266, 15)";
    "(38, 215, 16)" -> "(40, 212, 18)";
    "(40, 212, 18)" -> "(41, 178, 19)";
    "(40, 212, 18)" -> "(184, 210, 19)";
    "(41, 178, 19)" -> "(47, 174, 22)";
    "(47, 174, 22)" -> "(51, 171, 25)";
    "(51, 171, 25)" -> "(55, 60, 27)";
    "(51, 171, 25)" -> "(70, 152, 28)";
    "(51, 171, 25)" -> "(159, 164, 29)";
    "(70, 152, 28)" -> "(77, 105, 30)";
    "(70, 152, 28)" -> "(110, 140, 31)";
    "(70, 152, 28)" -> "(146, 150, 30)";
    "(77, 105, 30)" -> "(80, 101, 33)";
    "(80, 101, 33)" -> "(88, 93, 37)";
    "(110, 140, 31)" -> "(113, 139, 32)";
    "(113, 139, 32)" -> "(117, 131, 35)";
    "(117, 131, 35)" -> "(122, 127, 38)";
    "(184, 210, 19)" -> "(188, 207, 22)";
    "(188, 207, 22)" -> "(196, 201, 27)";
    "(229, 266, 15)" -> "(240, 261, 20)";
    "(240, 261, 20)" -> "(247, 252, 22)";
    "(288, 483, 3)" -> "(299, 398, 7)";
    "(288, 483, 3)" -> "(411, 442, 9)";
    "(288, 483, 3)" -> "(464, 475, 10)";
    "(299, 398, 7)" -> "(305, 391, 10)";
    "(305, 391, 10)" -> "(322, 380, 16)";
    "(322, 380, 16)" -> "(324, 362, 18)";
    "(322, 380, 16)" -> "(369, 379, 17)";
    "(324, 362, 18)" -> "(334, 352, 26)";
    "(334, 352, 26)" -> "(339, 346, 29)";
    "(369, 379, 17)" -> "(372, 377, 19)";
    "(411, 442, 9)" -> "(416, 440, 11)";
    "(416, 440, 11)" -> "(423, 433, 15)";
    "(489, 512, 3)" -> "(499, 504, 7)";
    "(524, 829, 2)" -> "(527, 825, 5)";
    "(527, 825, 5)" -> "(535, 818, 12)";
    "(535, 818, 12)" -> "(540, 813, 14)";
    "(540, 813, 14)" -> "(547, 774, 19)";
    "(540, 813, 14)" -> "(791, 799, 22)";
    "(547, 774, 19)" -> "(557, 706, 29)";
    "(547, 774, 19)" -> "(723, 727, 24)";
    "(547, 774, 19)" -> "(737, 768, 20)";
    "(557, 706, 29)" -> "(559, 703, 31)";
    "(559, 703, 31)" -> "(566, 575, 35)";
    "(559, 703, 31)" -> "(593, 694, 38)";
    "(593, 694, 38)" -> "(602, 688, 40)";
    "(602, 688, 40)" -> "(607, 684, 44)";
    "(607, 684, 44)" -> "(611, 682, 46)";
    "(611, 682, 46)" -> "(614, 676, 49)";
    "(614, 676, 49)" -> "(619, 670, 54)";
    "(619, 670, 54)" -> "(627, 646, 60)";
    "(619, 670, 54)" -> "(659, 664, 57)";
    "(627, 646, 60)" -> "(630, 636, 63)";
    "(737, 768, 20)" -> "(744, 761, 25)";
    "(744, 761, 25)" -> "(748, 756, 29)";
    "(836, 915, 2)" -> "(839, 911, 4)";
    "(839, 911, 4)" -> "(841, 909, 5)";
    "(841, 909, 5)" -> "(850, 899, 13)";
    "(850, 899, 13)" -> "(855, 895, 15)";
}
