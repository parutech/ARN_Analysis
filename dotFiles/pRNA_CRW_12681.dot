digraph tree {
    "(0, 0, 0)";
    "(1, 26, 1)";
    "(4, 23, 3)";
    "(11, 16, 8)";
    "(43, 249, 3)";
    "(57, 169, 11)";
    "(61, 167, 13)";
    "(71, 158, 20)";
    "(76, 104, 24)";
    "(87, 92, 31)";
    "(122, 127, 30)";
    "(147, 151, 26)";
    "(179, 221, 6)";
    "(182, 220, 7)";
    "(186, 212, 10)";
    "(196, 204, 18)";
    "(229, 245, 7)";
    "(233, 238, 11)";
    "(258, 269, 6)";
    "(279, 284, 4)";
    "(304, 330, 1)";
    "(308, 327, 4)";
    "(316, 321, 9)";
    "(346, 370, 4)";
    "(356, 361, 8)";
    "(375, 433, 1)";
    "(383, 425, 7)";
    "(387, 420, 8)";
    "(400, 407, 16)";
    "(441, 478, 5)";
    "(452, 473, 10)";
    "(459, 464, 12)";
    "(517, 698, 4)";
    "(519, 695, 5)";
    "(523, 692, 8)";
    "(531, 582, 15)";
    "(534, 580, 17)";
    "(543, 569, 26)";
    "(554, 560, 33)";
    "(594, 686, 11)";
    "(600, 679, 17)";
    "(609, 671, 24)";
    "(611, 653, 26)";
    "(621, 643, 34)";
    "(627, 634, 37)";
    "(659, 670, 25)";
    "(663, 668, 27)";
    "(711, 743, 6)";
    "(716, 741, 8)";
    "(722, 735, 11)";
    "(724, 734, 12)";
    "(778, 785, 1)";
    "(0, 0, 0)" -> "(1, 26, 1)";
    "(0, 0, 0)" -> "(43, 249, 3)";
    "(0, 0, 0)" -> "(258, 269, 6)";
    "(0, 0, 0)" -> "(279, 284, 4)";
    "(0, 0, 0)" -> "(304, 330, 1)";
    "(0, 0, 0)" -> "(346, 370, 4)";
    "(0, 0, 0)" -> "(375, 433, 1)";
    "(0, 0, 0)" -> "(441, 478, 5)";
    "(0, 0, 0)" -> "(517, 698, 4)";
    "(0, 0, 0)" -> "(711, 743, 6)";
    "(0, 0, 0)" -> "(778, 785, 1)";
    "(1, 26, 1)" -> "(4, 23, 3)";
    "(4, 23, 3)" -> "(11, 16, 8)";
    "(43, 249, 3)" -> "(57, 169, 11)";
    "(43, 249, 3)" -> "(179, 221, 6)";
    "(43, 249, 3)" -> "(229, 245, 7)";
    "(57, 169, 11)" -> "(61, 167, 13)";
    "(61, 167, 13)" -> "(71, 158, 20)";
    "(71, 158, 20)" -> "(76, 104, 24)";
    "(71, 158, 20)" -> "(122, 127, 30)";
    "(71, 158, 20)" -> "(147, 151, 26)";
    "(76, 104, 24)" -> "(87, 92, 31)";
    "(179, 221, 6)" -> "(182, 220, 7)";
    "(182, 220, 7)" -> "(186, 212, 10)";
    "(186, 212, 10)" -> "(196, 204, 18)";
    "(229, 245, 7)" -> "(233, 238, 11)";
    "(304, 330, 1)" -> "(308, 327, 4)";
    "(308, 327, 4)" -> "(316, 321, 9)";
    "(346, 370, 4)" -> "(356, 361, 8)";
    "(375, 433, 1)" -> "(383, 425, 7)";
    "(383, 425, 7)" -> "(387, 420, 8)";
    "(387, 420, 8)" -> "(400, 407, 16)";
    "(441, 478, 5)" -> "(452, 473, 10)";
    "(452, 473, 10)" -> "(459, 464, 12)";
    "(517, 698, 4)" -> "(519, 695, 5)";
    "(519, 695, 5)" -> "(523, 692, 8)";
    "(523, 692, 8)" -> "(531, 582, 15)";
    "(523, 692, 8)" -> "(594, 686, 11)";
    "(531, 582, 15)" -> "(534, 580, 17)";
    "(534, 580, 17)" -> "(543, 569, 26)";
    "(543, 569, 26)" -> "(554, 560, 33)";
    "(594, 686, 11)" -> "(600, 679, 17)";
    "(600, 679, 17)" -> "(609, 671, 24)";
    "(609, 671, 24)" -> "(611, 653, 26)";
    "(609, 671, 24)" -> "(659, 670, 25)";
    "(611, 653, 26)" -> "(621, 643, 34)";
    "(621, 643, 34)" -> "(627, 634, 37)";
    "(659, 670, 25)" -> "(663, 668, 27)";
    "(711, 743, 6)" -> "(716, 741, 8)";
    "(716, 741, 8)" -> "(722, 735, 11)";
    "(722, 735, 11)" -> "(724, 734, 12)";
}
