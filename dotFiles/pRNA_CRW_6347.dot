digraph tree {
    "(0, 0, 0)";
    "(3, 269, 3)";
    "(8, 33, 6)";
    "(19, 24, 15)";
    "(44, 227, 6)";
    "(58, 147, 14)";
    "(61, 145, 16)";
    "(71, 136, 23)";
    "(76, 104, 27)";
    "(87, 92, 34)";
    "(115, 120, 26)";
    "(128, 133, 25)";
    "(157, 199, 9)";
    "(160, 198, 10)";
    "(164, 190, 13)";
    "(174, 182, 21)";
    "(207, 223, 10)";
    "(211, 216, 14)";
    "(236, 247, 9)";
    "(257, 262, 7)";
    "(282, 308, 1)";
    "(286, 305, 4)";
    "(294, 299, 9)";
    "(324, 348, 4)";
    "(334, 339, 8)";
    "(355, 387, 1)";
    "(361, 378, 7)";
    "(365, 373, 8)";
    "(394, 431, 5)";
    "(405, 426, 10)";
    "(412, 417, 12)";
    "(461, 754, 2)";
    "(470, 651, 6)";
    "(472, 648, 7)";
    "(476, 645, 10)";
    "(484, 535, 17)";
    "(487, 533, 19)";
    "(496, 522, 28)";
    "(507, 513, 35)";
    "(547, 639, 13)";
    "(553, 632, 19)";
    "(562, 624, 26)";
    "(564, 606, 28)";
    "(574, 596, 36)";
    "(580, 587, 39)";
    "(612, 623, 27)";
    "(616, 621, 29)";
    "(664, 695, 8)";
    "(669, 693, 10)";
    "(676, 686, 14)";
    "(730, 735, 14)";
    "(0, 0, 0)" -> "(3, 269, 3)";
    "(0, 0, 0)" -> "(282, 308, 1)";
    "(0, 0, 0)" -> "(324, 348, 4)";
    "(0, 0, 0)" -> "(355, 387, 1)";
    "(0, 0, 0)" -> "(394, 431, 5)";
    "(0, 0, 0)" -> "(461, 754, 2)";
    "(3, 269, 3)" -> "(8, 33, 6)";
    "(3, 269, 3)" -> "(44, 227, 6)";
    "(3, 269, 3)" -> "(236, 247, 9)";
    "(3, 269, 3)" -> "(257, 262, 7)";
    "(8, 33, 6)" -> "(19, 24, 15)";
    "(44, 227, 6)" -> "(58, 147, 14)";
    "(44, 227, 6)" -> "(157, 199, 9)";
    "(44, 227, 6)" -> "(207, 223, 10)";
    "(58, 147, 14)" -> "(61, 145, 16)";
    "(61, 145, 16)" -> "(71, 136, 23)";
    "(71, 136, 23)" -> "(76, 104, 27)";
    "(71, 136, 23)" -> "(115, 120, 26)";
    "(71, 136, 23)" -> "(128, 133, 25)";
    "(76, 104, 27)" -> "(87, 92, 34)";
    "(157, 199, 9)" -> "(160, 198, 10)";
    "(160, 198, 10)" -> "(164, 190, 13)";
    "(164, 190, 13)" -> "(174, 182, 21)";
    "(207, 223, 10)" -> "(211, 216, 14)";
    "(282, 308, 1)" -> "(286, 305, 4)";
    "(286, 305, 4)" -> "(294, 299, 9)";
    "(324, 348, 4)" -> "(334, 339, 8)";
    "(355, 387, 1)" -> "(361, 378, 7)";
    "(361, 378, 7)" -> "(365, 373, 8)";
    "(394, 431, 5)" -> "(405, 426, 10)";
    "(405, 426, 10)" -> "(412, 417, 12)";
    "(461, 754, 2)" -> "(470, 651, 6)";
    "(461, 754, 2)" -> "(664, 695, 8)";
    "(461, 754, 2)" -> "(730, 735, 14)";
    "(470, 651, 6)" -> "(472, 648, 7)";
    "(472, 648, 7)" -> "(476, 645, 10)";
    "(476, 645, 10)" -> "(484, 535, 17)";
    "(476, 645, 10)" -> "(547, 639, 13)";
    "(484, 535, 17)" -> "(487, 533, 19)";
    "(487, 533, 19)" -> "(496, 522, 28)";
    "(496, 522, 28)" -> "(507, 513, 35)";
    "(547, 639, 13)" -> "(553, 632, 19)";
    "(553, 632, 19)" -> "(562, 624, 26)";
    "(562, 624, 26)" -> "(564, 606, 28)";
    "(562, 624, 26)" -> "(612, 623, 27)";
    "(564, 606, 28)" -> "(574, 596, 36)";
    "(574, 596, 36)" -> "(580, 587, 39)";
    "(612, 623, 27)" -> "(616, 621, 29)";
    "(664, 695, 8)" -> "(669, 693, 10)";
    "(669, 693, 10)" -> "(676, 686, 14)";
}
