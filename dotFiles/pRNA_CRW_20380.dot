digraph tree {
    "(0, 0, 0)";
    "(25, 59, 5)";
    "(26, 57, 6)";
    "(31, 55, 8)";
    "(38, 48, 12)";
    "(79, 124, 6)";
    "(89, 100, 14)";
    "(112, 117, 8)";
    "(137, 160, 3)";
    "(147, 152, 7)";
    "(172, 639, 2)";
    "(175, 635, 5)";
    "(183, 628, 12)";
    "(186, 623, 14)";
    "(193, 584, 19)";
    "(203, 472, 29)";
    "(205, 469, 31)";
    "(213, 222, 35)";
    "(240, 459, 38)";
    "(248, 288, 41)";
    "(251, 284, 44)";
    "(253, 283, 45)";
    "(263, 268, 52)";
    "(293, 453, 40)";
    "(298, 449, 44)";
    "(302, 447, 46)";
    "(305, 441, 49)";
    "(309, 436, 53)";
    "(318, 347, 59)";
    "(321, 326, 62)";
    "(334, 341, 63)";
    "(361, 428, 57)";
    "(369, 393, 64)";
    "(374, 387, 66)";
    "(378, 385, 68)";
    "(409, 415, 65)";
    "(491, 534, 26)";
    "(499, 526, 29)";
    "(503, 520, 31)";
    "(509, 514, 34)";
    "(547, 578, 20)";
    "(558, 567, 28)";
    "(601, 609, 22)";
    "(649, 738, 2)";
    "(651, 736, 3)";
    "(653, 733, 4)";
    "(660, 727, 10)";
    "(674, 713, 22)";
    "(684, 705, 27)";
    "(689, 701, 31)";
    "(693, 698, 33)";
    "(0, 0, 0)" -> "(25, 59, 5)";
    "(0, 0, 0)" -> "(79, 124, 6)";
    "(0, 0, 0)" -> "(137, 160, 3)";
    "(0, 0, 0)" -> "(172, 639, 2)";
    "(0, 0, 0)" -> "(649, 738, 2)";
    "(25, 59, 5)" -> "(26, 57, 6)";
    "(26, 57, 6)" -> "(31, 55, 8)";
    "(31, 55, 8)" -> "(38, 48, 12)";
    "(79, 124, 6)" -> "(89, 100, 14)";
    "(79, 124, 6)" -> "(112, 117, 8)";
    "(137, 160, 3)" -> "(147, 152, 7)";
    "(172, 639, 2)" -> "(175, 635, 5)";
    "(175, 635, 5)" -> "(183, 628, 12)";
    "(183, 628, 12)" -> "(186, 623, 14)";
    "(186, 623, 14)" -> "(193, 584, 19)";
    "(186, 623, 14)" -> "(601, 609, 22)";
    "(193, 584, 19)" -> "(203, 472, 29)";
    "(193, 584, 19)" -> "(491, 534, 26)";
    "(193, 584, 19)" -> "(547, 578, 20)";
    "(203, 472, 29)" -> "(205, 469, 31)";
    "(205, 469, 31)" -> "(213, 222, 35)";
    "(205, 469, 31)" -> "(240, 459, 38)";
    "(240, 459, 38)" -> "(248, 288, 41)";
    "(240, 459, 38)" -> "(293, 453, 40)";
    "(248, 288, 41)" -> "(251, 284, 44)";
    "(251, 284, 44)" -> "(253, 283, 45)";
    "(253, 283, 45)" -> "(263, 268, 52)";
    "(293, 453, 40)" -> "(298, 449, 44)";
    "(298, 449, 44)" -> "(302, 447, 46)";
    "(302, 447, 46)" -> "(305, 441, 49)";
    "(305, 441, 49)" -> "(309, 436, 53)";
    "(309, 436, 53)" -> "(318, 347, 59)";
    "(309, 436, 53)" -> "(361, 428, 57)";
    "(318, 347, 59)" -> "(321, 326, 62)";
    "(318, 347, 59)" -> "(334, 341, 63)";
    "(361, 428, 57)" -> "(369, 393, 64)";
    "(361, 428, 57)" -> "(409, 415, 65)";
    "(369, 393, 64)" -> "(374, 387, 66)";
    "(374, 387, 66)" -> "(378, 385, 68)";
    "(491, 534, 26)" -> "(499, 526, 29)";
    "(499, 526, 29)" -> "(503, 520, 31)";
    "(503, 520, 31)" -> "(509, 514, 34)";
    "(547, 578, 20)" -> "(558, 567, 28)";
    "(649, 738, 2)" -> "(651, 736, 3)";
    "(651, 736, 3)" -> "(653, 733, 4)";
    "(653, 733, 4)" -> "(660, 727, 10)";
    "(660, 727, 10)" -> "(674, 713, 22)";
    "(674, 713, 22)" -> "(684, 705, 27)";
    "(684, 705, 27)" -> "(689, 701, 31)";
    "(689, 701, 31)" -> "(693, 698, 33)";
}
