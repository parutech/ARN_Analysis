digraph tree {
    "(0, 0, 0)";
    "(2, 23, 2)";
    "(10, 15, 7)";
    "(42, 247, 3)";
    "(56, 167, 11)";
    "(60, 165, 13)";
    "(70, 156, 20)";
    "(75, 103, 24)";
    "(86, 91, 31)";
    "(121, 126, 30)";
    "(145, 150, 25)";
    "(177, 219, 6)";
    "(180, 218, 7)";
    "(184, 210, 10)";
    "(194, 202, 18)";
    "(227, 243, 7)";
    "(231, 236, 11)";
    "(256, 267, 6)";
    "(277, 282, 4)";
    "(302, 328, 1)";
    "(306, 325, 4)";
    "(314, 319, 9)";
    "(344, 368, 4)";
    "(354, 359, 8)";
    "(373, 432, 1)";
    "(381, 424, 7)";
    "(385, 419, 8)";
    "(398, 406, 16)";
    "(440, 477, 5)";
    "(451, 472, 10)";
    "(458, 463, 12)";
    "(505, 816, 3)";
    "(516, 696, 7)";
    "(518, 693, 8)";
    "(522, 690, 11)";
    "(530, 580, 18)";
    "(533, 578, 20)";
    "(541, 568, 28)";
    "(553, 559, 35)";
    "(592, 684, 14)";
    "(598, 677, 20)";
    "(607, 669, 27)";
    "(609, 651, 29)";
    "(619, 641, 37)";
    "(625, 632, 40)";
    "(657, 668, 28)";
    "(661, 666, 30)";
    "(709, 740, 9)";
    "(714, 738, 11)";
    "(721, 731, 15)";
    "(761, 809, 9)";
    "(775, 782, 21)";
    "(798, 802, 11)";
    "(0, 0, 0)" -> "(2, 23, 2)";
    "(0, 0, 0)" -> "(42, 247, 3)";
    "(0, 0, 0)" -> "(256, 267, 6)";
    "(0, 0, 0)" -> "(277, 282, 4)";
    "(0, 0, 0)" -> "(302, 328, 1)";
    "(0, 0, 0)" -> "(344, 368, 4)";
    "(0, 0, 0)" -> "(373, 432, 1)";
    "(0, 0, 0)" -> "(440, 477, 5)";
    "(0, 0, 0)" -> "(505, 816, 3)";
    "(2, 23, 2)" -> "(10, 15, 7)";
    "(42, 247, 3)" -> "(56, 167, 11)";
    "(42, 247, 3)" -> "(177, 219, 6)";
    "(42, 247, 3)" -> "(227, 243, 7)";
    "(56, 167, 11)" -> "(60, 165, 13)";
    "(60, 165, 13)" -> "(70, 156, 20)";
    "(70, 156, 20)" -> "(75, 103, 24)";
    "(70, 156, 20)" -> "(121, 126, 30)";
    "(70, 156, 20)" -> "(145, 150, 25)";
    "(75, 103, 24)" -> "(86, 91, 31)";
    "(177, 219, 6)" -> "(180, 218, 7)";
    "(180, 218, 7)" -> "(184, 210, 10)";
    "(184, 210, 10)" -> "(194, 202, 18)";
    "(227, 243, 7)" -> "(231, 236, 11)";
    "(302, 328, 1)" -> "(306, 325, 4)";
    "(306, 325, 4)" -> "(314, 319, 9)";
    "(344, 368, 4)" -> "(354, 359, 8)";
    "(373, 432, 1)" -> "(381, 424, 7)";
    "(381, 424, 7)" -> "(385, 419, 8)";
    "(385, 419, 8)" -> "(398, 406, 16)";
    "(440, 477, 5)" -> "(451, 472, 10)";
    "(451, 472, 10)" -> "(458, 463, 12)";
    "(505, 816, 3)" -> "(516, 696, 7)";
    "(505, 816, 3)" -> "(709, 740, 9)";
    "(505, 816, 3)" -> "(761, 809, 9)";
    "(516, 696, 7)" -> "(518, 693, 8)";
    "(518, 693, 8)" -> "(522, 690, 11)";
    "(522, 690, 11)" -> "(530, 580, 18)";
    "(522, 690, 11)" -> "(592, 684, 14)";
    "(530, 580, 18)" -> "(533, 578, 20)";
    "(533, 578, 20)" -> "(541, 568, 28)";
    "(541, 568, 28)" -> "(553, 559, 35)";
    "(592, 684, 14)" -> "(598, 677, 20)";
    "(598, 677, 20)" -> "(607, 669, 27)";
    "(607, 669, 27)" -> "(609, 651, 29)";
    "(607, 669, 27)" -> "(657, 668, 28)";
    "(609, 651, 29)" -> "(619, 641, 37)";
    "(619, 641, 37)" -> "(625, 632, 40)";
    "(657, 668, 28)" -> "(661, 666, 30)";
    "(709, 740, 9)" -> "(714, 738, 11)";
    "(714, 738, 11)" -> "(721, 731, 15)";
    "(761, 809, 9)" -> "(775, 782, 21)";
    "(761, 809, 9)" -> "(798, 802, 11)";
}
