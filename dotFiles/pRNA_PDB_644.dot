digraph tree {
    "(0, 0, 0)";
    "(10, 388, 1)";
    "(20, 379, 2)";
    "(24, 375, 5)";
    "(48, 59, 6)";
    "(66, 165, 6)";
    "(74, 112, 11)";
    "(77, 103, 12)";
    "(79, 99, 13)";
    "(85, 92, 15)";
    "(120, 162, 7)";
    "(123, 159, 8)";
    "(129, 152, 9)";
    "(174, 360, 8)";
    "(210, 339, 11)";
    "(214, 333, 12)";
    "(234, 254, 13)";
    "(236, 252, 14)";
    "(260, 309, 14)";
    "(270, 290, 17)";
    "(272, 288, 18)";
    "(274, 286, 19)";
    "(320, 329, 15)";
    "(396, 461, 1)";
    "(406, 452, 2)";
    "(411, 418, 3)";
    "(469, 518, 1)";
    "(472, 515, 3)";
    "(487, 501, 4)";
    "(491, 498, 5)";
    "(521, 632, 1)";
    "(523, 593, 2)";
    "(526, 590, 3)";
    "(598, 630, 2)";
    "(600, 621, 3)";
    "(607, 618, 4)";
    "(609, 616, 5)";
    "(611, 614, 6)";
    "(634, 689, 1)";
    "(640, 682, 2)";
    "(642, 680, 3)";
    "(645, 677, 4)";
    "(653, 658, 5)";
    "(659, 662, 5)";
    "(0, 0, 0)" -> "(10, 388, 1)";
    "(0, 0, 0)" -> "(396, 461, 1)";
    "(0, 0, 0)" -> "(469, 518, 1)";
    "(0, 0, 0)" -> "(521, 632, 1)";
    "(0, 0, 0)" -> "(634, 689, 1)";
    "(10, 388, 1)" -> "(20, 379, 2)";
    "(20, 379, 2)" -> "(24, 375, 5)";
    "(24, 375, 5)" -> "(48, 59, 6)";
    "(24, 375, 5)" -> "(66, 165, 6)";
    "(24, 375, 5)" -> "(174, 360, 8)";
    "(66, 165, 6)" -> "(74, 112, 11)";
    "(66, 165, 6)" -> "(120, 162, 7)";
    "(74, 112, 11)" -> "(77, 103, 12)";
    "(77, 103, 12)" -> "(79, 99, 13)";
    "(79, 99, 13)" -> "(85, 92, 15)";
    "(120, 162, 7)" -> "(123, 159, 8)";
    "(123, 159, 8)" -> "(129, 152, 9)";
    "(174, 360, 8)" -> "(210, 339, 11)";
    "(210, 339, 11)" -> "(214, 333, 12)";
    "(214, 333, 12)" -> "(234, 254, 13)";
    "(214, 333, 12)" -> "(260, 309, 14)";
    "(214, 333, 12)" -> "(320, 329, 15)";
    "(234, 254, 13)" -> "(236, 252, 14)";
    "(260, 309, 14)" -> "(270, 290, 17)";
    "(270, 290, 17)" -> "(272, 288, 18)";
    "(272, 288, 18)" -> "(274, 286, 19)";
    "(396, 461, 1)" -> "(406, 452, 2)";
    "(406, 452, 2)" -> "(411, 418, 3)";
    "(469, 518, 1)" -> "(472, 515, 3)";
    "(472, 515, 3)" -> "(487, 501, 4)";
    "(487, 501, 4)" -> "(491, 498, 5)";
    "(521, 632, 1)" -> "(523, 593, 2)";
    "(521, 632, 1)" -> "(598, 630, 2)";
    "(523, 593, 2)" -> "(526, 590, 3)";
    "(598, 630, 2)" -> "(600, 621, 3)";
    "(600, 621, 3)" -> "(607, 618, 4)";
    "(607, 618, 4)" -> "(609, 616, 5)";
    "(609, 616, 5)" -> "(611, 614, 6)";
    "(634, 689, 1)" -> "(640, 682, 2)";
    "(640, 682, 2)" -> "(642, 680, 3)";
    "(642, 680, 3)" -> "(645, 677, 4)";
    "(645, 677, 4)" -> "(653, 658, 5)";
    "(645, 677, 4)" -> "(659, 662, 5)";
}
