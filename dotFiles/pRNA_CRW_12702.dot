digraph tree {
    "(0, 0, 0)";
    "(4, 315, 3)";
    "(8, 312, 6)";
    "(13, 53, 9)";
    "(18, 50, 12)";
    "(21, 46, 15)";
    "(24, 43, 17)";
    "(31, 36, 22)";
    "(64, 270, 9)";
    "(78, 190, 17)";
    "(82, 188, 19)";
    "(92, 179, 26)";
    "(97, 125, 30)";
    "(108, 113, 37)";
    "(143, 148, 36)";
    "(168, 172, 32)";
    "(200, 242, 12)";
    "(203, 241, 13)";
    "(207, 233, 16)";
    "(217, 225, 24)";
    "(250, 266, 13)";
    "(254, 259, 17)";
    "(279, 290, 12)";
    "(300, 305, 10)";
    "(325, 351, 1)";
    "(329, 348, 4)";
    "(337, 342, 9)";
    "(367, 391, 4)";
    "(377, 382, 8)";
    "(396, 454, 1)";
    "(404, 446, 7)";
    "(408, 441, 8)";
    "(421, 428, 16)";
    "(462, 499, 5)";
    "(473, 494, 10)";
    "(480, 485, 12)";
    "(538, 717, 4)";
    "(540, 714, 5)";
    "(544, 711, 8)";
    "(549, 604, 12)";
    "(551, 601, 14)";
    "(554, 599, 16)";
    "(563, 587, 25)";
    "(571, 581, 29)";
    "(573, 578, 31)";
    "(613, 705, 11)";
    "(619, 698, 17)";
    "(628, 690, 24)";
    "(630, 672, 26)";
    "(640, 662, 34)";
    "(646, 653, 37)";
    "(678, 689, 25)";
    "(682, 687, 27)";
    "(0, 0, 0)" -> "(4, 315, 3)";
    "(0, 0, 0)" -> "(325, 351, 1)";
    "(0, 0, 0)" -> "(367, 391, 4)";
    "(0, 0, 0)" -> "(396, 454, 1)";
    "(0, 0, 0)" -> "(462, 499, 5)";
    "(0, 0, 0)" -> "(538, 717, 4)";
    "(4, 315, 3)" -> "(8, 312, 6)";
    "(8, 312, 6)" -> "(13, 53, 9)";
    "(8, 312, 6)" -> "(64, 270, 9)";
    "(8, 312, 6)" -> "(279, 290, 12)";
    "(8, 312, 6)" -> "(300, 305, 10)";
    "(13, 53, 9)" -> "(18, 50, 12)";
    "(18, 50, 12)" -> "(21, 46, 15)";
    "(21, 46, 15)" -> "(24, 43, 17)";
    "(24, 43, 17)" -> "(31, 36, 22)";
    "(64, 270, 9)" -> "(78, 190, 17)";
    "(64, 270, 9)" -> "(200, 242, 12)";
    "(64, 270, 9)" -> "(250, 266, 13)";
    "(78, 190, 17)" -> "(82, 188, 19)";
    "(82, 188, 19)" -> "(92, 179, 26)";
    "(92, 179, 26)" -> "(97, 125, 30)";
    "(92, 179, 26)" -> "(143, 148, 36)";
    "(92, 179, 26)" -> "(168, 172, 32)";
    "(97, 125, 30)" -> "(108, 113, 37)";
    "(200, 242, 12)" -> "(203, 241, 13)";
    "(203, 241, 13)" -> "(207, 233, 16)";
    "(207, 233, 16)" -> "(217, 225, 24)";
    "(250, 266, 13)" -> "(254, 259, 17)";
    "(325, 351, 1)" -> "(329, 348, 4)";
    "(329, 348, 4)" -> "(337, 342, 9)";
    "(367, 391, 4)" -> "(377, 382, 8)";
    "(396, 454, 1)" -> "(404, 446, 7)";
    "(404, 446, 7)" -> "(408, 441, 8)";
    "(408, 441, 8)" -> "(421, 428, 16)";
    "(462, 499, 5)" -> "(473, 494, 10)";
    "(473, 494, 10)" -> "(480, 485, 12)";
    "(538, 717, 4)" -> "(540, 714, 5)";
    "(540, 714, 5)" -> "(544, 711, 8)";
    "(544, 711, 8)" -> "(549, 604, 12)";
    "(544, 711, 8)" -> "(613, 705, 11)";
    "(549, 604, 12)" -> "(551, 601, 14)";
    "(551, 601, 14)" -> "(554, 599, 16)";
    "(554, 599, 16)" -> "(563, 587, 25)";
    "(563, 587, 25)" -> "(571, 581, 29)";
    "(571, 581, 29)" -> "(573, 578, 31)";
    "(613, 705, 11)" -> "(619, 698, 17)";
    "(619, 698, 17)" -> "(628, 690, 24)";
    "(628, 690, 24)" -> "(630, 672, 26)";
    "(628, 690, 24)" -> "(678, 689, 25)";
    "(630, 672, 26)" -> "(640, 662, 34)";
    "(640, 662, 34)" -> "(646, 653, 37)";
    "(678, 689, 25)" -> "(682, 687, 27)";
}
