digraph tree {
    "(0, 0, 0)";
    "(19, 35, 4)";
    "(23, 28, 8)";
    "(48, 59, 6)";
    "(69, 74, 4)";
    "(96, 122, 1)";
    "(100, 119, 4)";
    "(108, 113, 9)";
    "(138, 161, 4)";
    "(147, 153, 7)";
    "(168, 225, 1)";
    "(170, 220, 3)";
    "(175, 216, 7)";
    "(179, 211, 8)";
    "(265, 307, 1)";
    "(275, 297, 9)";
    "(281, 288, 12)";
    "(313, 324, 1)";
    "(317, 322, 3)";
    "(365, 396, 6)";
    "(370, 394, 8)";
    "(377, 387, 12)";
    "(417, 466, 6)";
    "(430, 439, 17)";
    "(454, 459, 8)";
    "(489, 644, 4)";
    "(493, 642, 6)";
    "(496, 636, 9)";
    "(500, 631, 13)";
    "(509, 538, 19)";
    "(512, 517, 22)";
    "(525, 532, 23)";
    "(552, 623, 17)";
    "(558, 590, 22)";
    "(559, 588, 23)";
    "(560, 586, 24)";
    "(565, 580, 26)";
    "(569, 578, 28)";
    "(604, 610, 25)";
    "(686, 729, 7)";
    "(694, 721, 10)";
    "(698, 715, 12)";
    "(704, 709, 15)";
    "(742, 773, 1)";
    "(753, 762, 9)";
    "(796, 804, 8)";
    "(0, 0, 0)" -> "(19, 35, 4)";
    "(0, 0, 0)" -> "(48, 59, 6)";
    "(0, 0, 0)" -> "(69, 74, 4)";
    "(0, 0, 0)" -> "(96, 122, 1)";
    "(0, 0, 0)" -> "(138, 161, 4)";
    "(0, 0, 0)" -> "(168, 225, 1)";
    "(0, 0, 0)" -> "(265, 307, 1)";
    "(0, 0, 0)" -> "(313, 324, 1)";
    "(0, 0, 0)" -> "(365, 396, 6)";
    "(0, 0, 0)" -> "(417, 466, 6)";
    "(0, 0, 0)" -> "(489, 644, 4)";
    "(0, 0, 0)" -> "(686, 729, 7)";
    "(0, 0, 0)" -> "(742, 773, 1)";
    "(0, 0, 0)" -> "(796, 804, 8)";
    "(19, 35, 4)" -> "(23, 28, 8)";
    "(96, 122, 1)" -> "(100, 119, 4)";
    "(100, 119, 4)" -> "(108, 113, 9)";
    "(138, 161, 4)" -> "(147, 153, 7)";
    "(168, 225, 1)" -> "(170, 220, 3)";
    "(170, 220, 3)" -> "(175, 216, 7)";
    "(175, 216, 7)" -> "(179, 211, 8)";
    "(265, 307, 1)" -> "(275, 297, 9)";
    "(275, 297, 9)" -> "(281, 288, 12)";
    "(313, 324, 1)" -> "(317, 322, 3)";
    "(365, 396, 6)" -> "(370, 394, 8)";
    "(370, 394, 8)" -> "(377, 387, 12)";
    "(417, 466, 6)" -> "(430, 439, 17)";
    "(417, 466, 6)" -> "(454, 459, 8)";
    "(489, 644, 4)" -> "(493, 642, 6)";
    "(493, 642, 6)" -> "(496, 636, 9)";
    "(496, 636, 9)" -> "(500, 631, 13)";
    "(500, 631, 13)" -> "(509, 538, 19)";
    "(500, 631, 13)" -> "(552, 623, 17)";
    "(509, 538, 19)" -> "(512, 517, 22)";
    "(509, 538, 19)" -> "(525, 532, 23)";
    "(552, 623, 17)" -> "(558, 590, 22)";
    "(552, 623, 17)" -> "(604, 610, 25)";
    "(558, 590, 22)" -> "(559, 588, 23)";
    "(559, 588, 23)" -> "(560, 586, 24)";
    "(560, 586, 24)" -> "(565, 580, 26)";
    "(565, 580, 26)" -> "(569, 578, 28)";
    "(686, 729, 7)" -> "(694, 721, 10)";
    "(694, 721, 10)" -> "(698, 715, 12)";
    "(698, 715, 12)" -> "(704, 709, 15)";
    "(742, 773, 1)" -> "(753, 762, 9)";
}
