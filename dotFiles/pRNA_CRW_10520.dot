digraph tree {
    "(0, 0, 0)";
    "(2, 64, 2)";
    "(4, 46, 4)";
    "(14, 36, 12)";
    "(20, 27, 15)";
    "(52, 63, 3)";
    "(56, 61, 5)";
    "(104, 135, 6)";
    "(109, 133, 8)";
    "(116, 126, 12)";
    "(156, 205, 6)";
    "(170, 177, 18)";
    "(193, 198, 8)";
    "(218, 241, 3)";
    "(228, 233, 7)";
    "(256, 723, 1)";
    "(264, 716, 8)";
    "(267, 711, 10)";
    "(274, 672, 15)";
    "(284, 560, 25)";
    "(286, 557, 27)";
    "(294, 303, 31)";
    "(321, 547, 34)";
    "(329, 376, 37)";
    "(334, 370, 42)";
    "(343, 348, 49)";
    "(357, 368, 44)";
    "(360, 365, 46)";
    "(381, 541, 36)";
    "(386, 537, 40)";
    "(390, 535, 42)";
    "(393, 529, 45)";
    "(397, 524, 49)";
    "(406, 435, 55)";
    "(409, 414, 58)";
    "(422, 429, 59)";
    "(449, 516, 53)";
    "(457, 481, 60)";
    "(462, 475, 62)";
    "(466, 473, 64)";
    "(497, 503, 61)";
    "(579, 622, 22)";
    "(587, 614, 25)";
    "(591, 608, 27)";
    "(597, 602, 30)";
    "(635, 666, 16)";
    "(646, 655, 24)";
    "(689, 697, 18)";
    "(0, 0, 0)" -> "(2, 64, 2)";
    "(0, 0, 0)" -> "(104, 135, 6)";
    "(0, 0, 0)" -> "(156, 205, 6)";
    "(0, 0, 0)" -> "(218, 241, 3)";
    "(0, 0, 0)" -> "(256, 723, 1)";
    "(2, 64, 2)" -> "(4, 46, 4)";
    "(2, 64, 2)" -> "(52, 63, 3)";
    "(4, 46, 4)" -> "(14, 36, 12)";
    "(14, 36, 12)" -> "(20, 27, 15)";
    "(52, 63, 3)" -> "(56, 61, 5)";
    "(104, 135, 6)" -> "(109, 133, 8)";
    "(109, 133, 8)" -> "(116, 126, 12)";
    "(156, 205, 6)" -> "(170, 177, 18)";
    "(156, 205, 6)" -> "(193, 198, 8)";
    "(218, 241, 3)" -> "(228, 233, 7)";
    "(256, 723, 1)" -> "(264, 716, 8)";
    "(264, 716, 8)" -> "(267, 711, 10)";
    "(267, 711, 10)" -> "(274, 672, 15)";
    "(267, 711, 10)" -> "(689, 697, 18)";
    "(274, 672, 15)" -> "(284, 560, 25)";
    "(274, 672, 15)" -> "(579, 622, 22)";
    "(274, 672, 15)" -> "(635, 666, 16)";
    "(284, 560, 25)" -> "(286, 557, 27)";
    "(286, 557, 27)" -> "(294, 303, 31)";
    "(286, 557, 27)" -> "(321, 547, 34)";
    "(321, 547, 34)" -> "(329, 376, 37)";
    "(321, 547, 34)" -> "(381, 541, 36)";
    "(329, 376, 37)" -> "(334, 370, 42)";
    "(334, 370, 42)" -> "(343, 348, 49)";
    "(334, 370, 42)" -> "(357, 368, 44)";
    "(357, 368, 44)" -> "(360, 365, 46)";
    "(381, 541, 36)" -> "(386, 537, 40)";
    "(386, 537, 40)" -> "(390, 535, 42)";
    "(390, 535, 42)" -> "(393, 529, 45)";
    "(393, 529, 45)" -> "(397, 524, 49)";
    "(397, 524, 49)" -> "(406, 435, 55)";
    "(397, 524, 49)" -> "(449, 516, 53)";
    "(406, 435, 55)" -> "(409, 414, 58)";
    "(406, 435, 55)" -> "(422, 429, 59)";
    "(449, 516, 53)" -> "(457, 481, 60)";
    "(449, 516, 53)" -> "(497, 503, 61)";
    "(457, 481, 60)" -> "(462, 475, 62)";
    "(462, 475, 62)" -> "(466, 473, 64)";
    "(579, 622, 22)" -> "(587, 614, 25)";
    "(587, 614, 25)" -> "(591, 608, 27)";
    "(591, 608, 27)" -> "(597, 602, 30)";
    "(635, 666, 16)" -> "(646, 655, 24)";
}
