digraph tree {
    "(0, 0, 0)";
    "(1, 454, 1)";
    "(8, 330, 7)";
    "(10, 327, 9)";
    "(11, 293, 10)";
    "(18, 289, 13)";
    "(22, 286, 16)";
    "(27, 50, 19)";
    "(37, 42, 27)";
    "(61, 244, 19)";
    "(75, 164, 27)";
    "(78, 162, 29)";
    "(88, 153, 36)";
    "(93, 121, 40)";
    "(104, 109, 47)";
    "(132, 137, 39)";
    "(145, 150, 38)";
    "(174, 216, 22)";
    "(177, 215, 23)";
    "(181, 207, 26)";
    "(191, 199, 34)";
    "(224, 240, 23)";
    "(228, 233, 27)";
    "(253, 264, 22)";
    "(274, 279, 20)";
    "(299, 325, 10)";
    "(303, 322, 13)";
    "(311, 316, 18)";
    "(341, 365, 5)";
    "(351, 356, 9)";
    "(372, 404, 2)";
    "(378, 395, 8)";
    "(382, 390, 9)";
    "(411, 448, 6)";
    "(422, 443, 11)";
    "(429, 434, 13)";
    "(487, 668, 4)";
    "(489, 665, 5)";
    "(493, 662, 8)";
    "(501, 552, 15)";
    "(504, 550, 17)";
    "(513, 539, 26)";
    "(524, 530, 33)";
    "(564, 656, 11)";
    "(570, 649, 17)";
    "(579, 641, 24)";
    "(581, 623, 26)";
    "(591, 613, 34)";
    "(597, 604, 37)";
    "(629, 640, 25)";
    "(633, 638, 27)";
    "(0, 0, 0)" -> "(1, 454, 1)";
    "(0, 0, 0)" -> "(487, 668, 4)";
    "(1, 454, 1)" -> "(8, 330, 7)";
    "(1, 454, 1)" -> "(341, 365, 5)";
    "(1, 454, 1)" -> "(372, 404, 2)";
    "(1, 454, 1)" -> "(411, 448, 6)";
    "(8, 330, 7)" -> "(10, 327, 9)";
    "(10, 327, 9)" -> "(11, 293, 10)";
    "(10, 327, 9)" -> "(299, 325, 10)";
    "(11, 293, 10)" -> "(18, 289, 13)";
    "(18, 289, 13)" -> "(22, 286, 16)";
    "(22, 286, 16)" -> "(27, 50, 19)";
    "(22, 286, 16)" -> "(61, 244, 19)";
    "(22, 286, 16)" -> "(253, 264, 22)";
    "(22, 286, 16)" -> "(274, 279, 20)";
    "(27, 50, 19)" -> "(37, 42, 27)";
    "(61, 244, 19)" -> "(75, 164, 27)";
    "(61, 244, 19)" -> "(174, 216, 22)";
    "(61, 244, 19)" -> "(224, 240, 23)";
    "(75, 164, 27)" -> "(78, 162, 29)";
    "(78, 162, 29)" -> "(88, 153, 36)";
    "(88, 153, 36)" -> "(93, 121, 40)";
    "(88, 153, 36)" -> "(132, 137, 39)";
    "(88, 153, 36)" -> "(145, 150, 38)";
    "(93, 121, 40)" -> "(104, 109, 47)";
    "(174, 216, 22)" -> "(177, 215, 23)";
    "(177, 215, 23)" -> "(181, 207, 26)";
    "(181, 207, 26)" -> "(191, 199, 34)";
    "(224, 240, 23)" -> "(228, 233, 27)";
    "(299, 325, 10)" -> "(303, 322, 13)";
    "(303, 322, 13)" -> "(311, 316, 18)";
    "(341, 365, 5)" -> "(351, 356, 9)";
    "(372, 404, 2)" -> "(378, 395, 8)";
    "(378, 395, 8)" -> "(382, 390, 9)";
    "(411, 448, 6)" -> "(422, 443, 11)";
    "(422, 443, 11)" -> "(429, 434, 13)";
    "(487, 668, 4)" -> "(489, 665, 5)";
    "(489, 665, 5)" -> "(493, 662, 8)";
    "(493, 662, 8)" -> "(501, 552, 15)";
    "(493, 662, 8)" -> "(564, 656, 11)";
    "(501, 552, 15)" -> "(504, 550, 17)";
    "(504, 550, 17)" -> "(513, 539, 26)";
    "(513, 539, 26)" -> "(524, 530, 33)";
    "(564, 656, 11)" -> "(570, 649, 17)";
    "(570, 649, 17)" -> "(579, 641, 24)";
    "(579, 641, 24)" -> "(581, 623, 26)";
    "(579, 641, 24)" -> "(629, 640, 25)";
    "(581, 623, 26)" -> "(591, 613, 34)";
    "(591, 613, 34)" -> "(597, 604, 37)";
    "(629, 640, 25)" -> "(633, 638, 27)";
}
