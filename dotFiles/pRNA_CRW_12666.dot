digraph tree {
    "(0, 0, 0)";
    "(2, 21, 2)";
    "(9, 14, 7)";
    "(41, 248, 3)";
    "(55, 168, 11)";
    "(59, 166, 13)";
    "(69, 157, 20)";
    "(74, 102, 24)";
    "(85, 90, 31)";
    "(120, 125, 30)";
    "(145, 149, 26)";
    "(178, 220, 6)";
    "(181, 219, 7)";
    "(185, 211, 10)";
    "(195, 203, 18)";
    "(228, 244, 7)";
    "(232, 237, 11)";
    "(257, 268, 6)";
    "(278, 283, 4)";
    "(303, 329, 1)";
    "(307, 326, 4)";
    "(315, 320, 9)";
    "(345, 369, 4)";
    "(355, 360, 8)";
    "(374, 432, 1)";
    "(382, 424, 7)";
    "(386, 419, 8)";
    "(399, 406, 16)";
    "(440, 477, 5)";
    "(451, 472, 10)";
    "(458, 463, 12)";
    "(517, 708, 4)";
    "(519, 705, 5)";
    "(523, 702, 8)";
    "(529, 587, 13)";
    "(532, 585, 15)";
    "(536, 583, 17)";
    "(545, 572, 26)";
    "(551, 568, 28)";
    "(556, 562, 33)";
    "(597, 696, 11)";
    "(598, 692, 12)";
    "(600, 691, 13)";
    "(604, 686, 17)";
    "(608, 683, 19)";
    "(612, 680, 22)";
    "(615, 678, 24)";
    "(617, 660, 26)";
    "(628, 650, 34)";
    "(634, 641, 37)";
    "(666, 677, 25)";
    "(670, 675, 27)";
    "(0, 0, 0)" -> "(2, 21, 2)";
    "(0, 0, 0)" -> "(41, 248, 3)";
    "(0, 0, 0)" -> "(257, 268, 6)";
    "(0, 0, 0)" -> "(278, 283, 4)";
    "(0, 0, 0)" -> "(303, 329, 1)";
    "(0, 0, 0)" -> "(345, 369, 4)";
    "(0, 0, 0)" -> "(374, 432, 1)";
    "(0, 0, 0)" -> "(440, 477, 5)";
    "(0, 0, 0)" -> "(517, 708, 4)";
    "(2, 21, 2)" -> "(9, 14, 7)";
    "(41, 248, 3)" -> "(55, 168, 11)";
    "(41, 248, 3)" -> "(178, 220, 6)";
    "(41, 248, 3)" -> "(228, 244, 7)";
    "(55, 168, 11)" -> "(59, 166, 13)";
    "(59, 166, 13)" -> "(69, 157, 20)";
    "(69, 157, 20)" -> "(74, 102, 24)";
    "(69, 157, 20)" -> "(120, 125, 30)";
    "(69, 157, 20)" -> "(145, 149, 26)";
    "(74, 102, 24)" -> "(85, 90, 31)";
    "(178, 220, 6)" -> "(181, 219, 7)";
    "(181, 219, 7)" -> "(185, 211, 10)";
    "(185, 211, 10)" -> "(195, 203, 18)";
    "(228, 244, 7)" -> "(232, 237, 11)";
    "(303, 329, 1)" -> "(307, 326, 4)";
    "(307, 326, 4)" -> "(315, 320, 9)";
    "(345, 369, 4)" -> "(355, 360, 8)";
    "(374, 432, 1)" -> "(382, 424, 7)";
    "(382, 424, 7)" -> "(386, 419, 8)";
    "(386, 419, 8)" -> "(399, 406, 16)";
    "(440, 477, 5)" -> "(451, 472, 10)";
    "(451, 472, 10)" -> "(458, 463, 12)";
    "(517, 708, 4)" -> "(519, 705, 5)";
    "(519, 705, 5)" -> "(523, 702, 8)";
    "(523, 702, 8)" -> "(529, 587, 13)";
    "(523, 702, 8)" -> "(597, 696, 11)";
    "(529, 587, 13)" -> "(532, 585, 15)";
    "(532, 585, 15)" -> "(536, 583, 17)";
    "(536, 583, 17)" -> "(545, 572, 26)";
    "(545, 572, 26)" -> "(551, 568, 28)";
    "(551, 568, 28)" -> "(556, 562, 33)";
    "(597, 696, 11)" -> "(598, 692, 12)";
    "(598, 692, 12)" -> "(600, 691, 13)";
    "(600, 691, 13)" -> "(604, 686, 17)";
    "(604, 686, 17)" -> "(608, 683, 19)";
    "(608, 683, 19)" -> "(612, 680, 22)";
    "(612, 680, 22)" -> "(615, 678, 24)";
    "(615, 678, 24)" -> "(617, 660, 26)";
    "(615, 678, 24)" -> "(666, 677, 25)";
    "(617, 660, 26)" -> "(628, 650, 34)";
    "(628, 650, 34)" -> "(634, 641, 37)";
    "(666, 677, 25)" -> "(670, 675, 27)";
}
