digraph tree {
    "(0, 0, 0)";
    "(2, 41, 2)";
    "(10, 35, 8)";
    "(13, 32, 10)";
    "(20, 25, 15)";
    "(52, 258, 3)";
    "(66, 178, 11)";
    "(70, 176, 13)";
    "(80, 167, 20)";
    "(85, 113, 24)";
    "(96, 101, 31)";
    "(131, 136, 30)";
    "(156, 160, 26)";
    "(188, 230, 6)";
    "(191, 229, 7)";
    "(195, 221, 10)";
    "(205, 213, 18)";
    "(238, 254, 7)";
    "(242, 247, 11)";
    "(267, 278, 6)";
    "(288, 293, 4)";
    "(313, 339, 1)";
    "(317, 336, 4)";
    "(325, 330, 9)";
    "(355, 379, 4)";
    "(365, 370, 8)";
    "(384, 442, 1)";
    "(392, 434, 7)";
    "(396, 429, 8)";
    "(409, 416, 16)";
    "(450, 487, 5)";
    "(461, 482, 10)";
    "(468, 473, 12)";
    "(526, 707, 4)";
    "(528, 704, 5)";
    "(532, 701, 8)";
    "(540, 591, 15)";
    "(543, 589, 17)";
    "(552, 578, 26)";
    "(563, 569, 33)";
    "(603, 695, 11)";
    "(609, 688, 17)";
    "(618, 680, 24)";
    "(620, 662, 26)";
    "(630, 652, 34)";
    "(636, 643, 37)";
    "(668, 679, 25)";
    "(672, 677, 27)";
    "(720, 751, 6)";
    "(725, 749, 8)";
    "(732, 742, 12)";
    "(786, 793, 12)";
    "(809, 814, 2)";
    "(0, 0, 0)" -> "(2, 41, 2)";
    "(0, 0, 0)" -> "(52, 258, 3)";
    "(0, 0, 0)" -> "(267, 278, 6)";
    "(0, 0, 0)" -> "(288, 293, 4)";
    "(0, 0, 0)" -> "(313, 339, 1)";
    "(0, 0, 0)" -> "(355, 379, 4)";
    "(0, 0, 0)" -> "(384, 442, 1)";
    "(0, 0, 0)" -> "(450, 487, 5)";
    "(0, 0, 0)" -> "(526, 707, 4)";
    "(0, 0, 0)" -> "(720, 751, 6)";
    "(0, 0, 0)" -> "(786, 793, 12)";
    "(0, 0, 0)" -> "(809, 814, 2)";
    "(2, 41, 2)" -> "(10, 35, 8)";
    "(10, 35, 8)" -> "(13, 32, 10)";
    "(13, 32, 10)" -> "(20, 25, 15)";
    "(52, 258, 3)" -> "(66, 178, 11)";
    "(52, 258, 3)" -> "(188, 230, 6)";
    "(52, 258, 3)" -> "(238, 254, 7)";
    "(66, 178, 11)" -> "(70, 176, 13)";
    "(70, 176, 13)" -> "(80, 167, 20)";
    "(80, 167, 20)" -> "(85, 113, 24)";
    "(80, 167, 20)" -> "(131, 136, 30)";
    "(80, 167, 20)" -> "(156, 160, 26)";
    "(85, 113, 24)" -> "(96, 101, 31)";
    "(188, 230, 6)" -> "(191, 229, 7)";
    "(191, 229, 7)" -> "(195, 221, 10)";
    "(195, 221, 10)" -> "(205, 213, 18)";
    "(238, 254, 7)" -> "(242, 247, 11)";
    "(313, 339, 1)" -> "(317, 336, 4)";
    "(317, 336, 4)" -> "(325, 330, 9)";
    "(355, 379, 4)" -> "(365, 370, 8)";
    "(384, 442, 1)" -> "(392, 434, 7)";
    "(392, 434, 7)" -> "(396, 429, 8)";
    "(396, 429, 8)" -> "(409, 416, 16)";
    "(450, 487, 5)" -> "(461, 482, 10)";
    "(461, 482, 10)" -> "(468, 473, 12)";
    "(526, 707, 4)" -> "(528, 704, 5)";
    "(528, 704, 5)" -> "(532, 701, 8)";
    "(532, 701, 8)" -> "(540, 591, 15)";
    "(532, 701, 8)" -> "(603, 695, 11)";
    "(540, 591, 15)" -> "(543, 589, 17)";
    "(543, 589, 17)" -> "(552, 578, 26)";
    "(552, 578, 26)" -> "(563, 569, 33)";
    "(603, 695, 11)" -> "(609, 688, 17)";
    "(609, 688, 17)" -> "(618, 680, 24)";
    "(618, 680, 24)" -> "(620, 662, 26)";
    "(618, 680, 24)" -> "(668, 679, 25)";
    "(620, 662, 26)" -> "(630, 652, 34)";
    "(630, 652, 34)" -> "(636, 643, 37)";
    "(668, 679, 25)" -> "(672, 677, 27)";
    "(720, 751, 6)" -> "(725, 749, 8)";
    "(725, 749, 8)" -> "(732, 742, 12)";
}
